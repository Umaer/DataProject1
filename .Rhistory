my_cross_validate$yaw_belt <- (my_cross_validate$yaw_belt - mean(my_cross_validate$yaw_belt))/sd(my_cross_validate$yaw_belt)
my_cross_validate$yaw_dumbbell <- (my_cross_validate$yaw_dumbbell - mean(my_cross_validate$yaw_dumbbell))/sd(my_cross_validate$yaw_dumbbell)
predict(modFit,my_cross_validate)
crossV <- predict(modFit,my_cross_validate)
postResample(testPred, my_cross_validate$classe)
library(caret)
postResample(testPred, my_cross_validate$classe)
postResample(crossV, my_cross_validate$classe)
confusionMatrix(crossV, my_cross_validate$classe)
library(datasets)
data(swiss)
View(swiss)
require(stats)
lm(Fertility~Agriculture,data=swiss)
lm(Fertility~.,data=swiss)
data(InsectSprays)
View(InsectSprays)
lm(count~spray,data=InsectSprays)
InsectSprays$spray
summary(modFit)
lm(count~.,data=InsectSprays)
lm(count~spray-1,data=InsectSprays)
lm(count~spray-2,data=InsectSprays)
lm(count~spray-0,data=InsectSprays)
data(mtcars)
View(mtcars)
lm(mpg~cyl+wt,data=mtcars)
lm(mpg~cyl,data=mtcars)
lm(mpg~cyl+wt,data=mtcars)
lm(mpg~wt+cyl,data=mtcars)
mymod <- lm(mpg~wt+cyl,data=mtcars)
summary(mymod)
mymod <- lm(mpg~wt+factor(cyl),data=mtcars)
lm(mpg~wt+factor(cyl),data=mtcars)
summary(mymod)
lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit = lm(y~x)
hatValues(fit)
hatvalues(fit)
dfbetas(fit)
View(pml.training)
pml.training <- read.csv("D:/DataScience/ML/Week3/Assignment/pml-training.csv")
MyCols <- c("num_window","classe")
MyCols2 <- c("num_window")
mytraining <- pml.training
mytraining_new2 <- mytraining[,MyCols]
library(caret)
inTrain <- createDataPartition(y=mytraining_new2$classe,p=0.8,list=FALSE)
myt_n <- mytraining_new2[inTrain,]
pml.testing <- read.csv("D:/DataScience/ML/Week3/Assignment/pml-testing.csv")
my_test <- pml.testing[,MyCols2]
modFit <- train(classe~.,data=myt_n,method="rf",prox=TRUE)
inTrain <- createDataPartition(y=mytraining_new2$classe,p=0.3,list=FALSE)
myt_n <- mytraining_new2[inTrain,]
modFit <- train(classe~.,data=myt_n,method="rf",prox=TRUE)
library(datasets)
data(mtcars)
View(mtcars)
M <- abs(cor(mtcars[-2]))
diag(M) <- 0
which(M > 0.8,arr.ind=T)
M <- abs(cor(mtcars))
diag(M) <- 0
which(M > 0.5,arr.ind=T)
analysis = prcomp(mtcars[, -2], scale. = TRUE);
variance_vector = analysis$sdev ^ 2;
variance_vector
relative_variance <- variance_vector / sum(variance_vector);
cumsum(relative_variance);
?mtcars
require(graphics)
pairs(mtcars, main = "mtcars data")
coplot(mpg ~ disp | as.factor(cyl), data = mtcars,
panel = panel.smooth, rows = 1)
coplot(mpg ~ disp | as.factor(cyl), data = mtcars,
+        panel = panel.smooth, rows = 1)
?
mtcars
coplot(mpg ~ disp | as.factor(cyl), data = mtcars,panel = panel.smooth, rows = 1)
lm(mpg~as.factor(cyl)+as.factor(am)+wt+hp,data=mtcars)
mtcars_manual <- subset(mtcars,mtcars$am==0)
?mtcars
mtcars_manual <- subset(mtcars,mtcars$am==1)
mtcars_automatic <- subset(mtcars,mtcars$am==0)
fit_manual <- lm(mpg~cyl+wt+hp,data=mtcars_manual)
fit_manual
fit_automatic <- lm(mpg~cyl+wt+hp,data=mtcars_automatic)
fit_manual
fit_automatic
predict(fit_manual,mtcars_manual)
fit_manual$finalModel
p_manual <- predict(fit_manual,mtcars_manual)
p_manual
mtcars_manual$mpg-p_manual
resid(fit_manual)
plot(mtcars_manual$mpg,type="l",xaxt="n",xlab="",ylab="Energy sub metering")
lines(fit_manual,type="l",col="Red")
fit_manual
lines(p_manual,type="l",col="Red")
spline
t.test
t.test(fit_manual,fit_automatic)
fit_automatic
fit_manual
summary(fit_manual)
summary(fit_automatic)
anova(fit_manual,fit_automatic)
data(mtcars)
View(mtcars)
fit = lm(mpg~factor(am)+wt)
fit = lm(mpg~factor(am)+wt,data=mtcars)
fit
fit = lm(mpg~factor(am),data=mtcars)
fit
anova(fit)
resid(fit)
predit(fit,mtcars)
predict(fit,mtcars)
p_mtcars <- predict(fit,mtcars)
resid(p_mtcars)
resid(p_mtcars)
resid(fit)
fit<-glm(mpg~as.factor(cyl) + as.factor(vs) + as.factor(am) + as.factor(gear) + as.factor(carb) + disp + hp + drat + wt + qsec, data=mtcars)
step <- stepAIC(fit, direction="both")
resid(fit)
fit1<-lm(mpg~factor(am)+cyl+disp+hp+drat+wt+qsec+gear+carb)
fit1<-lm(mpg~factor(am)+cyl+disp+hp+drat+wt+qsec+gear+carb,data=mtcars)
fit1
resid(fit1)
fit2<-lm(mpg~factor(am)+cyl+disp+hp+drat+wt+qsec+gear,data=mtcars)
resid(fit2)
plot(resid(fit1),type="l",color="blue")
plot(resid(fit1),type="l",col="blue")
line(resid(fit2),type="l",col="red")
lines(resid(fit2),type="l",col="red")
fit3<-lm(mpg~factor(am)+cyl+disp+hp+drat+wt+gear,data=mtcars)
lines(resid(fit3),type="l",col="green")
fit4<-lm(mpg~factor(am)+cyl+disp+hp+wt+gear,data=mtcars)
lines(resid(fit4),type="l",col="black")
anova(fit1,fit2,fit3,fit4)
fit5 <-lm(mpg~factor(am)+cyl+hp+wt,data=mtcars)
lines(resid(fit5),type="l",col="purple")
plot(density(resid(fit1)))
plot(density(resid(fit2)))
plot(density(resid(fit3)))
plot(density(resid(fit4)))
plot(density(resid(fit5)))
fit1
summary(fit1)
summary(fit1)$p
summary(fit1)$p-value
summary(fit1)
summary(fit1)$pval
summary(fit1)$pvalue
summary(fit1)$p.value
summary(fit1)$cofficients
summary(fit1)$Coefficients
anova(fit1,fit2,fit3,fit4,fit5)
fit1<- lm(mpg ~ factor(am) + cyl + disp + hp + drat + wt + gear,data=mtcars)
fit2<- lm(mpg ~ factor(am) + cyl + disp + hp + drat + wt ,data=mtcars)
fit3<- lm(mpg ~ factor(am) + cyl + disp + hp  + wt ,data=mtcars)
fit4<- lm(mpg ~ factor(am) + cyl + hp  + wt ,data=mtcars)
plot(resid(fit1),type="l")
line(resid(fit2),type="l",col="blue")
line(resid(fit3),type="l",col="red")
line(resid(fit4),type="l",col="green")
line(resid(fit2),type="l",col="blue")
lines(resid(fit2),type="l",col="blue")
plot(resid(fit1),type="l")
lines(resid(fit2),type="l",col="blue")
lines(resid(fit3),type="l",col="red")
lines(resid(fit4),type="l",col="green")
anova(fit4,fit3,fit2,fit1)
anova(fit1,fit2,fit3,fit4)
layout(matrix(c(1,2,3,4),2,2))
plot(fit4)
summary(fit4)
t.test(fit4)
fit4
t.test(mpg~am,data=mtcars)
myestimates = predict(fit4,mtcars)
myestimates
t.test(myestimates)
t.test(mpg~factor(am),data=mtcars)
t.test(mpg~am,data=mtcars)
t.test(mtcars[am==0],mtcars[am==1])
t.test(mtcars[mtcars$am==0],mtcars[mtcars$am==1])
t.test(mtcars[mtcars$am==0,],mtcars[mtcars$am==1,])
max(mtcars$mpg)
max(mtcars[mtcars$am==1],)
max(mtcars[mtcars$am==1,])
max(mtcars[mtcars$am==1,]$mpg)
max(mtcars[mtcars$am==0,]$mpg)
?mtcars
max(mtcars[mtcars$am==0,]$mpg)
mt_manual <- subset(mtcars,mtcars$am==1)
mt_auto <- subset(mtcars,mtcars$am==0)
predit(fit4,mt_manual)
predict(fit4,mt_manual)
predict(fit4,mt_auto)
max(predict(fit4,mt_auto))
max(predict(fit4,mt_manual))
t.test(mt_auto,mt_manual)
pairs(mtcars, panel=panel.smooth, main="MTCars Data")
library(datasets)
data(mtcars)
str(mtcars)
pairs(mtcars, panel=panel.smooth, main="MTCars Data")
fit1<- lm(mpg ~ factor(am) + cyl + disp + hp + drat + wt + gear,data=mtcars)
fit2<- lm(mpg ~ factor(am) + cyl + disp + hp + drat + wt ,data=mtcars)
fit3<- lm(mpg ~ factor(am) + cyl + disp + hp  + wt ,data=mtcars)
fit4<- lm(mpg ~ factor(am) + cyl + hp  + wt ,data=mtcars)
plot(resid(fit1),type="l")
lines(resid(fit2),type="l",col="blue")
lines(resid(fit3),type="l",col="red")
lines(resid(fit4),type="l",col="green")
anova(fit1,fit2,fit3,fit4)
layout(matrix(c(1,2,3,4),2,2)) # optional 4 graphs/page
plot(fit4)
mt_manual <- subset(mtcars,mtcars$am==1)
mt_auto <- subset(mtcars,mtcars$am==0)
predict(fit4,mt_manual)
predict(fit4,mt_auto)
This is an R Markdown document. Markdown is a simple formatting syntax for authoring web pages (click the **Help** toolbar button for more details on using R Markdown).
x = c(21,34,6,47,10,49,23,32,12,16,29,49,28,8,57,9,31,10,21,
26,31,52,21,8,18,5,18,26,27,26,32,2,59,58,19,14,16,9,23,
28,34,70,69,54,39,9,21,54,26)
y = c(47,76,33,78,62,78,33,64,83,67,61,85,46,53,55,71,59,41,82,
56,39,89,31,43,29,55, 81,82,82,85,59,74,80,88,29,58,71,60,
86,91,72,89,80,84,54,71,75,84,79)
m1 <- lm(y~x)  #Create a linear model
resid(m1) #List of residuals
plot(density(resid(m1))) #A density plot
qqnorm(resid(m1)) # A quantile normal plot - good for checking normality
qqline(resid(m1))
y      <- rnorm(100, 0, 5)
x      <- rnorm(100, 0, 2)
res    <- lm(y ~ x)$residuals
fitted <- lm(y ~ x)$fitted.values
plot(y, res)
plot(x, res)
plot(fitted, res)
pml.training <- read.csv("D:/DataScience/ML/Week3/Assignment/pml-training.csv")
MyCols <- read.table("D:/DataScience/ML/Week3/Assignment/MyCols.csv", quote="\"")
MyCols2 <- read.table("D:/DataScience/ML/Week3/Assignment/MyCols2.csv", quote="\"")
mytraining <- pml.training
mytraining_new2 <- mytraining[,c(levels(MyCols$V1))]
library(caret)
inTrain <- createDataPartition(y=mytraining_new2$classe,p=0.3,list=FALSE)
myt_n <- mytraining_new2[inTrain,]
##my_test <- mytraining_new2[-inTrain,]
pml.testing <- read.csv("D:/DataScience/ML/Week3/Assignment/pml-testing.csv")
my_test <- pml.testing[,c(levels(MyCols2$V1))]
## Some Preprocessing
myt_n$accel_arm_x <- (myt_n$accel_arm_x - mean(myt_n$accel_arm_x))/sd(myt_n$accel_arm_x)
myt_n$accel_arm_y <- (myt_n$accel_arm_y - mean(myt_n$accel_arm_y))/sd(myt_n$accel_arm_y)
myt_n$accel_belt_x <- (myt_n$accel_belt_x - mean(myt_n$accel_belt_x))/sd(myt_n$accel_belt_x)
myt_n$accel_belt_y <- (myt_n$accel_belt_y - mean(myt_n$accel_belt_y))/sd(myt_n$accel_belt_y)
myt_n$accel_belt_z <- (myt_n$accel_belt_z - mean(myt_n$accel_belt_z))/sd(myt_n$accel_belt_z)
myt_n$accel_dumbbell_x <- (myt_n$accel_dumbbell_x - mean(myt_n$accel_dumbbell_x))/sd(myt_n$accel_dumbbell_x)
myt_n$accel_dumbbell_y <- (myt_n$accel_dumbbell_y - mean(myt_n$accel_dumbbell_y))/sd(myt_n$accel_dumbbell_y)
myt_n$accel_dumbbell_z <- (myt_n$accel_dumbbell_z - mean(myt_n$accel_dumbbell_z))/sd(myt_n$accel_dumbbell_z)
myt_n$accel_forearm_z <- (myt_n$accel_forearm_z - mean(myt_n$accel_forearm_z))/sd(myt_n$accel_forearm_z)
myt_n$gyros_arm_x <- (myt_n$gyros_arm_x - mean(myt_n$gyros_arm_x))/sd(myt_n$gyros_arm_x)
myt_n$gyros_arm_y <- (myt_n$gyros_arm_y - mean(myt_n$gyros_arm_y))/sd(myt_n$gyros_arm_y)
myt_n$gyros_belt_x <- (myt_n$gyros_belt_x - mean(myt_n$gyros_belt_x))/sd(myt_n$gyros_belt_x)
myt_n$gyros_belt_y <- (myt_n$gyros_belt_y - mean(myt_n$gyros_belt_y))/sd(myt_n$gyros_belt_y)
myt_n$gyros_belt_z <- (myt_n$gyros_belt_z - mean(myt_n$gyros_belt_z))/sd(myt_n$gyros_belt_z)
myt_n$magnet_arm_x <- (myt_n$magnet_arm_x - mean(myt_n$magnet_arm_x))/sd(myt_n$magnet_arm_x)
myt_n$magnet_arm_y <- (myt_n$magnet_arm_y - mean(myt_n$magnet_arm_y))/sd(myt_n$magnet_arm_y)
myt_n$magnet_belt_x <- (myt_n$magnet_belt_x - mean(myt_n$magnet_belt_x))/sd(myt_n$magnet_belt_x)
myt_n$magnet_belt_y <- (myt_n$magnet_belt_y - mean(myt_n$magnet_belt_y))/sd(myt_n$magnet_belt_y)
myt_n$magnet_belt_z <- (myt_n$magnet_belt_z - mean(myt_n$magnet_belt_z))/sd(myt_n$magnet_belt_z)
myt_n$magnet_dumbbell_x <- (myt_n$magnet_dumbbell_x - mean(myt_n$magnet_dumbbell_x))/sd(myt_n$magnet_dumbbell_x)
myt_n$magnet_dumbbell_y <- (myt_n$magnet_dumbbell_y - mean(myt_n$magnet_dumbbell_y))/sd(myt_n$magnet_dumbbell_y)
myt_n$magnet_dumbbell_z <- (myt_n$magnet_dumbbell_z - mean(myt_n$magnet_dumbbell_z))/sd(myt_n$magnet_dumbbell_z)
myt_n$pitch_belt <- (myt_n$pitch_belt - mean(myt_n$pitch_belt))/sd(myt_n$pitch_belt)
myt_n$roll_belt <- (myt_n$roll_belt - mean(myt_n$roll_belt))/sd(myt_n$roll_belt)
myt_n$total_accel_belt <- (myt_n$total_accel_belt - mean(myt_n$total_accel_belt))/sd(myt_n$total_accel_belt)
myt_n$total_accel_dumbbell <- (myt_n$total_accel_dumbbell - mean(myt_n$total_accel_dumbbell))/sd(myt_n$total_accel_dumbbell)
myt_n$yaw_belt <- (myt_n$yaw_belt - mean(myt_n$yaw_belt))/sd(myt_n$yaw_belt)
myt_n$yaw_dumbbell <- (myt_n$yaw_dumbbell - mean(myt_n$yaw_dumbbell))/sd(myt_n$yaw_dumbbell)
my_test$accel_arm_x <- (my_test$accel_arm_x - mean(my_test$accel_arm_x))/sd(my_test$accel_arm_x)
my_test$accel_arm_y <- (my_test$accel_arm_y - mean(my_test$accel_arm_y))/sd(my_test$accel_arm_y)
my_test$accel_belt_x <- (my_test$accel_belt_x - mean(my_test$accel_belt_x))/sd(my_test$accel_belt_x)
my_test$accel_belt_y <- (my_test$accel_belt_y - mean(my_test$accel_belt_y))/sd(my_test$accel_belt_y)
my_test$accel_belt_z <- (my_test$accel_belt_z - mean(my_test$accel_belt_z))/sd(my_test$accel_belt_z)
my_test$accel_dumbbell_x <- (my_test$accel_dumbbell_x - mean(my_test$accel_dumbbell_x))/sd(my_test$accel_dumbbell_x)
my_test$accel_dumbbell_y <- (my_test$accel_dumbbell_y - mean(my_test$accel_dumbbell_y))/sd(my_test$accel_dumbbell_y)
my_test$accel_dumbbell_z <- (my_test$accel_dumbbell_z - mean(my_test$accel_dumbbell_z))/sd(my_test$accel_dumbbell_z)
my_test$accel_forearm_z <- (my_test$accel_forearm_z - mean(my_test$accel_forearm_z))/sd(my_test$accel_forearm_z)
my_test$gyros_arm_x <- (my_test$gyros_arm_x - mean(my_test$gyros_arm_x))/sd(my_test$gyros_arm_x)
my_test$gyros_arm_y <- (my_test$gyros_arm_y - mean(my_test$gyros_arm_y))/sd(my_test$gyros_arm_y)
my_test$gyros_belt_x <- (my_test$gyros_belt_x - mean(my_test$gyros_belt_x))/sd(my_test$gyros_belt_x)
my_test$gyros_belt_y <- (my_test$gyros_belt_y - mean(my_test$gyros_belt_y))/sd(my_test$gyros_belt_y)
my_test$gyros_belt_z <- (my_test$gyros_belt_z - mean(my_test$gyros_belt_z))/sd(my_test$gyros_belt_z)
my_test$magnet_arm_x <- (my_test$magnet_arm_x - mean(my_test$magnet_arm_x))/sd(my_test$magnet_arm_x)
my_test$magnet_arm_y <- (my_test$magnet_arm_y - mean(my_test$magnet_arm_y))/sd(my_test$magnet_arm_y)
my_test$magnet_belt_x <- (my_test$magnet_belt_x - mean(my_test$magnet_belt_x))/sd(my_test$magnet_belt_x)
my_test$magnet_belt_y <- (my_test$magnet_belt_y - mean(my_test$magnet_belt_y))/sd(my_test$magnet_belt_y)
my_test$magnet_belt_z <- (my_test$magnet_belt_z - mean(my_test$magnet_belt_z))/sd(my_test$magnet_belt_z)
my_test$magnet_dumbbell_x <- (my_test$magnet_dumbbell_x - mean(my_test$magnet_dumbbell_x))/sd(my_test$magnet_dumbbell_x)
my_test$magnet_dumbbell_y <- (my_test$magnet_dumbbell_y - mean(my_test$magnet_dumbbell_y))/sd(my_test$magnet_dumbbell_y)
my_test$magnet_dumbbell_z <- (my_test$magnet_dumbbell_z - mean(my_test$magnet_dumbbell_z))/sd(my_test$magnet_dumbbell_z)
my_test$pitch_belt <- (my_test$pitch_belt - mean(my_test$pitch_belt))/sd(my_test$pitch_belt)
my_test$roll_belt <- (my_test$roll_belt - mean(my_test$roll_belt))/sd(my_test$roll_belt)
my_test$total_accel_belt <- (my_test$total_accel_belt - mean(my_test$total_accel_belt))/sd(my_test$total_accel_belt)
my_test$total_accel_dumbbell <- (my_test$total_accel_dumbbell - mean(my_test$total_accel_dumbbell))/sd(my_test$total_accel_dumbbell)
my_test$yaw_belt <- (my_test$yaw_belt - mean(my_test$yaw_belt))/sd(my_test$yaw_belt)
my_test$yaw_dumbbell <- (my_test$yaw_dumbbell - mean(my_test$yaw_dumbbell))/sd(my_test$yaw_dumbbell)
trControl = trainControl(method = "cv", number = 4)).
trControl = trainControl(method = "cv", number = 4))
trControl = trainControl(method = "cv", number = 4)
trControl = trainControl(method = "rf")
modFit <- trControl(classe~.,data=myt_n)
trControl = trainControl(classe~.,data=myt_n,method = "rf")
trControl = trainControl(method = "cv", number = 4)
ctrl = trainControl(method = "cv", number = 4)
modFit <- train(classe~.,data=myt_n,method="rf",prox=TRUE,trControl = ctrl,allowParallel=TRUE)
modFit
predict(modFit,my_test)
inTrain <- createDataPartition(y=mytraining_new2$classe,p=0.6,list=FALSE)
inTrain <- createDataPartition(y=mytraining_new2$classe,p=0.7,list=FALSE)
inTrain <- createDataPartition(y=mytraining_new2$classe,p=0.7,list=FALSE)
myt_n <- mytraining_new2[inTrain,]
ctrl = trainControl(method = "cv", number = 4)
modFit <- train(classe~.,data=myt_n,method="rf",prox=TRUE,trControl = ctrl,allowParallel=TRUE)
pml.training <- read.csv("D:/DataScience/ML/Week3/Assignment/pml-training.csv")
MyCols <- read.table("D:/DataScience/ML/Week3/Assignment/MyCols.csv", quote="\"")
MyCols2 <- read.table("D:/DataScience/ML/Week3/Assignment/MyCols2.csv", quote="\"")
mytraining <- pml.training
mytraining_new2 <- mytraining[,c(levels(MyCols$V1))]
library(caret)
inTrain <- createDataPartition(y=mytraining_new2$classe,p=0.4,list=FALSE)
myt_n <- mytraining_new2[inTrain,]
##my_test <- mytraining_new2[-inTrain,]
pml.testing <- read.csv("D:/DataScience/ML/Week3/Assignment/pml-testing.csv")
my_test <- pml.testing[,c(levels(MyCols2$V1))]
## Some Preprocessing
myt_n$accel_arm_x <- (myt_n$accel_arm_x - mean(myt_n$accel_arm_x))/sd(myt_n$accel_arm_x)
myt_n$accel_arm_y <- (myt_n$accel_arm_y - mean(myt_n$accel_arm_y))/sd(myt_n$accel_arm_y)
myt_n$accel_belt_x <- (myt_n$accel_belt_x - mean(myt_n$accel_belt_x))/sd(myt_n$accel_belt_x)
myt_n$accel_belt_y <- (myt_n$accel_belt_y - mean(myt_n$accel_belt_y))/sd(myt_n$accel_belt_y)
myt_n$accel_belt_z <- (myt_n$accel_belt_z - mean(myt_n$accel_belt_z))/sd(myt_n$accel_belt_z)
myt_n$accel_dumbbell_x <- (myt_n$accel_dumbbell_x - mean(myt_n$accel_dumbbell_x))/sd(myt_n$accel_dumbbell_x)
myt_n$accel_dumbbell_y <- (myt_n$accel_dumbbell_y - mean(myt_n$accel_dumbbell_y))/sd(myt_n$accel_dumbbell_y)
myt_n$accel_dumbbell_z <- (myt_n$accel_dumbbell_z - mean(myt_n$accel_dumbbell_z))/sd(myt_n$accel_dumbbell_z)
myt_n$accel_forearm_z <- (myt_n$accel_forearm_z - mean(myt_n$accel_forearm_z))/sd(myt_n$accel_forearm_z)
myt_n$gyros_arm_x <- (myt_n$gyros_arm_x - mean(myt_n$gyros_arm_x))/sd(myt_n$gyros_arm_x)
myt_n$gyros_arm_y <- (myt_n$gyros_arm_y - mean(myt_n$gyros_arm_y))/sd(myt_n$gyros_arm_y)
myt_n$gyros_belt_x <- (myt_n$gyros_belt_x - mean(myt_n$gyros_belt_x))/sd(myt_n$gyros_belt_x)
myt_n$gyros_belt_y <- (myt_n$gyros_belt_y - mean(myt_n$gyros_belt_y))/sd(myt_n$gyros_belt_y)
myt_n$gyros_belt_z <- (myt_n$gyros_belt_z - mean(myt_n$gyros_belt_z))/sd(myt_n$gyros_belt_z)
myt_n$magnet_arm_x <- (myt_n$magnet_arm_x - mean(myt_n$magnet_arm_x))/sd(myt_n$magnet_arm_x)
myt_n$magnet_arm_y <- (myt_n$magnet_arm_y - mean(myt_n$magnet_arm_y))/sd(myt_n$magnet_arm_y)
myt_n$magnet_belt_x <- (myt_n$magnet_belt_x - mean(myt_n$magnet_belt_x))/sd(myt_n$magnet_belt_x)
myt_n$magnet_belt_y <- (myt_n$magnet_belt_y - mean(myt_n$magnet_belt_y))/sd(myt_n$magnet_belt_y)
myt_n$magnet_belt_z <- (myt_n$magnet_belt_z - mean(myt_n$magnet_belt_z))/sd(myt_n$magnet_belt_z)
myt_n$magnet_dumbbell_x <- (myt_n$magnet_dumbbell_x - mean(myt_n$magnet_dumbbell_x))/sd(myt_n$magnet_dumbbell_x)
myt_n$magnet_dumbbell_y <- (myt_n$magnet_dumbbell_y - mean(myt_n$magnet_dumbbell_y))/sd(myt_n$magnet_dumbbell_y)
myt_n$magnet_dumbbell_z <- (myt_n$magnet_dumbbell_z - mean(myt_n$magnet_dumbbell_z))/sd(myt_n$magnet_dumbbell_z)
myt_n$pitch_belt <- (myt_n$pitch_belt - mean(myt_n$pitch_belt))/sd(myt_n$pitch_belt)
myt_n$roll_belt <- (myt_n$roll_belt - mean(myt_n$roll_belt))/sd(myt_n$roll_belt)
myt_n$total_accel_belt <- (myt_n$total_accel_belt - mean(myt_n$total_accel_belt))/sd(myt_n$total_accel_belt)
myt_n$total_accel_dumbbell <- (myt_n$total_accel_dumbbell - mean(myt_n$total_accel_dumbbell))/sd(myt_n$total_accel_dumbbell)
myt_n$yaw_belt <- (myt_n$yaw_belt - mean(myt_n$yaw_belt))/sd(myt_n$yaw_belt)
myt_n$yaw_dumbbell <- (myt_n$yaw_dumbbell - mean(myt_n$yaw_dumbbell))/sd(myt_n$yaw_dumbbell)
my_test$accel_arm_x <- (my_test$accel_arm_x - mean(my_test$accel_arm_x))/sd(my_test$accel_arm_x)
my_test$accel_arm_y <- (my_test$accel_arm_y - mean(my_test$accel_arm_y))/sd(my_test$accel_arm_y)
my_test$accel_belt_x <- (my_test$accel_belt_x - mean(my_test$accel_belt_x))/sd(my_test$accel_belt_x)
my_test$accel_belt_y <- (my_test$accel_belt_y - mean(my_test$accel_belt_y))/sd(my_test$accel_belt_y)
my_test$accel_belt_z <- (my_test$accel_belt_z - mean(my_test$accel_belt_z))/sd(my_test$accel_belt_z)
my_test$accel_dumbbell_x <- (my_test$accel_dumbbell_x - mean(my_test$accel_dumbbell_x))/sd(my_test$accel_dumbbell_x)
my_test$accel_dumbbell_y <- (my_test$accel_dumbbell_y - mean(my_test$accel_dumbbell_y))/sd(my_test$accel_dumbbell_y)
my_test$accel_dumbbell_z <- (my_test$accel_dumbbell_z - mean(my_test$accel_dumbbell_z))/sd(my_test$accel_dumbbell_z)
my_test$accel_forearm_z <- (my_test$accel_forearm_z - mean(my_test$accel_forearm_z))/sd(my_test$accel_forearm_z)
my_test$gyros_arm_x <- (my_test$gyros_arm_x - mean(my_test$gyros_arm_x))/sd(my_test$gyros_arm_x)
my_test$gyros_arm_y <- (my_test$gyros_arm_y - mean(my_test$gyros_arm_y))/sd(my_test$gyros_arm_y)
my_test$gyros_belt_x <- (my_test$gyros_belt_x - mean(my_test$gyros_belt_x))/sd(my_test$gyros_belt_x)
my_test$gyros_belt_y <- (my_test$gyros_belt_y - mean(my_test$gyros_belt_y))/sd(my_test$gyros_belt_y)
my_test$gyros_belt_z <- (my_test$gyros_belt_z - mean(my_test$gyros_belt_z))/sd(my_test$gyros_belt_z)
my_test$magnet_arm_x <- (my_test$magnet_arm_x - mean(my_test$magnet_arm_x))/sd(my_test$magnet_arm_x)
my_test$magnet_arm_y <- (my_test$magnet_arm_y - mean(my_test$magnet_arm_y))/sd(my_test$magnet_arm_y)
my_test$magnet_belt_x <- (my_test$magnet_belt_x - mean(my_test$magnet_belt_x))/sd(my_test$magnet_belt_x)
my_test$magnet_belt_y <- (my_test$magnet_belt_y - mean(my_test$magnet_belt_y))/sd(my_test$magnet_belt_y)
my_test$magnet_belt_z <- (my_test$magnet_belt_z - mean(my_test$magnet_belt_z))/sd(my_test$magnet_belt_z)
my_test$magnet_dumbbell_x <- (my_test$magnet_dumbbell_x - mean(my_test$magnet_dumbbell_x))/sd(my_test$magnet_dumbbell_x)
my_test$magnet_dumbbell_y <- (my_test$magnet_dumbbell_y - mean(my_test$magnet_dumbbell_y))/sd(my_test$magnet_dumbbell_y)
my_test$magnet_dumbbell_z <- (my_test$magnet_dumbbell_z - mean(my_test$magnet_dumbbell_z))/sd(my_test$magnet_dumbbell_z)
my_test$pitch_belt <- (my_test$pitch_belt - mean(my_test$pitch_belt))/sd(my_test$pitch_belt)
my_test$roll_belt <- (my_test$roll_belt - mean(my_test$roll_belt))/sd(my_test$roll_belt)
my_test$total_accel_belt <- (my_test$total_accel_belt - mean(my_test$total_accel_belt))/sd(my_test$total_accel_belt)
my_test$total_accel_dumbbell <- (my_test$total_accel_dumbbell - mean(my_test$total_accel_dumbbell))/sd(my_test$total_accel_dumbbell)
my_test$yaw_belt <- (my_test$yaw_belt - mean(my_test$yaw_belt))/sd(my_test$yaw_belt)
my_test$yaw_dumbbell <- (my_test$yaw_dumbbell - mean(my_test$yaw_dumbbell))/sd(my_test$yaw_dumbbell)
ctrl = trainControl(method = "oob", number = 4)
modFit <- train(classe~.,data=myt_n,method="rf",prox=TRUE,trControl = ctrl,allowParallel=TRUE)
predict(modFit,my_test)
pml.training <- read.csv("D:/DataScience/ML/Week3/Assignment/pml-training.csv")
MyCols <- read.table("D:/DataScience/ML/Week3/Assignment/MyCols.csv", quote="\"")
MyCols2 <- read.table("D:/DataScience/ML/Week3/Assignment/MyCols2.csv", quote="\"")
mytraining <- pml.training
mytraining_new2 <- mytraining[,c(levels(MyCols$V1))]
library(caret)
inTrain <- createDataPartition(y=mytraining_new2$classe,p=0.5,list=FALSE)
myt_n <- mytraining_new2[inTrain,]
##my_test <- mytraining_new2[-inTrain,]
pml.testing <- read.csv("D:/DataScience/ML/Week3/Assignment/pml-testing.csv")
my_test <- pml.testing[,c(levels(MyCols2$V1))]
## Some Preprocessing
myt_n$accel_arm_x <- (myt_n$accel_arm_x - mean(myt_n$accel_arm_x))/sd(myt_n$accel_arm_x)
myt_n$accel_arm_y <- (myt_n$accel_arm_y - mean(myt_n$accel_arm_y))/sd(myt_n$accel_arm_y)
myt_n$accel_belt_x <- (myt_n$accel_belt_x - mean(myt_n$accel_belt_x))/sd(myt_n$accel_belt_x)
myt_n$accel_belt_y <- (myt_n$accel_belt_y - mean(myt_n$accel_belt_y))/sd(myt_n$accel_belt_y)
myt_n$accel_belt_z <- (myt_n$accel_belt_z - mean(myt_n$accel_belt_z))/sd(myt_n$accel_belt_z)
myt_n$accel_dumbbell_x <- (myt_n$accel_dumbbell_x - mean(myt_n$accel_dumbbell_x))/sd(myt_n$accel_dumbbell_x)
myt_n$accel_dumbbell_y <- (myt_n$accel_dumbbell_y - mean(myt_n$accel_dumbbell_y))/sd(myt_n$accel_dumbbell_y)
myt_n$accel_dumbbell_z <- (myt_n$accel_dumbbell_z - mean(myt_n$accel_dumbbell_z))/sd(myt_n$accel_dumbbell_z)
myt_n$accel_forearm_z <- (myt_n$accel_forearm_z - mean(myt_n$accel_forearm_z))/sd(myt_n$accel_forearm_z)
myt_n$gyros_arm_x <- (myt_n$gyros_arm_x - mean(myt_n$gyros_arm_x))/sd(myt_n$gyros_arm_x)
myt_n$gyros_arm_y <- (myt_n$gyros_arm_y - mean(myt_n$gyros_arm_y))/sd(myt_n$gyros_arm_y)
myt_n$gyros_belt_x <- (myt_n$gyros_belt_x - mean(myt_n$gyros_belt_x))/sd(myt_n$gyros_belt_x)
myt_n$gyros_belt_y <- (myt_n$gyros_belt_y - mean(myt_n$gyros_belt_y))/sd(myt_n$gyros_belt_y)
myt_n$gyros_belt_z <- (myt_n$gyros_belt_z - mean(myt_n$gyros_belt_z))/sd(myt_n$gyros_belt_z)
myt_n$magnet_arm_x <- (myt_n$magnet_arm_x - mean(myt_n$magnet_arm_x))/sd(myt_n$magnet_arm_x)
myt_n$magnet_arm_y <- (myt_n$magnet_arm_y - mean(myt_n$magnet_arm_y))/sd(myt_n$magnet_arm_y)
myt_n$magnet_belt_x <- (myt_n$magnet_belt_x - mean(myt_n$magnet_belt_x))/sd(myt_n$magnet_belt_x)
myt_n$magnet_belt_y <- (myt_n$magnet_belt_y - mean(myt_n$magnet_belt_y))/sd(myt_n$magnet_belt_y)
myt_n$magnet_belt_z <- (myt_n$magnet_belt_z - mean(myt_n$magnet_belt_z))/sd(myt_n$magnet_belt_z)
myt_n$magnet_dumbbell_x <- (myt_n$magnet_dumbbell_x - mean(myt_n$magnet_dumbbell_x))/sd(myt_n$magnet_dumbbell_x)
myt_n$magnet_dumbbell_y <- (myt_n$magnet_dumbbell_y - mean(myt_n$magnet_dumbbell_y))/sd(myt_n$magnet_dumbbell_y)
myt_n$magnet_dumbbell_z <- (myt_n$magnet_dumbbell_z - mean(myt_n$magnet_dumbbell_z))/sd(myt_n$magnet_dumbbell_z)
myt_n$pitch_belt <- (myt_n$pitch_belt - mean(myt_n$pitch_belt))/sd(myt_n$pitch_belt)
myt_n$roll_belt <- (myt_n$roll_belt - mean(myt_n$roll_belt))/sd(myt_n$roll_belt)
myt_n$total_accel_belt <- (myt_n$total_accel_belt - mean(myt_n$total_accel_belt))/sd(myt_n$total_accel_belt)
myt_n$total_accel_dumbbell <- (myt_n$total_accel_dumbbell - mean(myt_n$total_accel_dumbbell))/sd(myt_n$total_accel_dumbbell)
myt_n$yaw_belt <- (myt_n$yaw_belt - mean(myt_n$yaw_belt))/sd(myt_n$yaw_belt)
myt_n$yaw_dumbbell <- (myt_n$yaw_dumbbell - mean(myt_n$yaw_dumbbell))/sd(myt_n$yaw_dumbbell)
my_test$accel_arm_x <- (my_test$accel_arm_x - mean(my_test$accel_arm_x))/sd(my_test$accel_arm_x)
my_test$accel_arm_y <- (my_test$accel_arm_y - mean(my_test$accel_arm_y))/sd(my_test$accel_arm_y)
my_test$accel_belt_x <- (my_test$accel_belt_x - mean(my_test$accel_belt_x))/sd(my_test$accel_belt_x)
my_test$accel_belt_y <- (my_test$accel_belt_y - mean(my_test$accel_belt_y))/sd(my_test$accel_belt_y)
my_test$accel_belt_z <- (my_test$accel_belt_z - mean(my_test$accel_belt_z))/sd(my_test$accel_belt_z)
my_test$accel_dumbbell_x <- (my_test$accel_dumbbell_x - mean(my_test$accel_dumbbell_x))/sd(my_test$accel_dumbbell_x)
my_test$accel_dumbbell_y <- (my_test$accel_dumbbell_y - mean(my_test$accel_dumbbell_y))/sd(my_test$accel_dumbbell_y)
my_test$accel_dumbbell_z <- (my_test$accel_dumbbell_z - mean(my_test$accel_dumbbell_z))/sd(my_test$accel_dumbbell_z)
my_test$accel_forearm_z <- (my_test$accel_forearm_z - mean(my_test$accel_forearm_z))/sd(my_test$accel_forearm_z)
my_test$gyros_arm_x <- (my_test$gyros_arm_x - mean(my_test$gyros_arm_x))/sd(my_test$gyros_arm_x)
my_test$gyros_arm_y <- (my_test$gyros_arm_y - mean(my_test$gyros_arm_y))/sd(my_test$gyros_arm_y)
my_test$gyros_belt_x <- (my_test$gyros_belt_x - mean(my_test$gyros_belt_x))/sd(my_test$gyros_belt_x)
my_test$gyros_belt_y <- (my_test$gyros_belt_y - mean(my_test$gyros_belt_y))/sd(my_test$gyros_belt_y)
my_test$gyros_belt_z <- (my_test$gyros_belt_z - mean(my_test$gyros_belt_z))/sd(my_test$gyros_belt_z)
my_test$magnet_arm_x <- (my_test$magnet_arm_x - mean(my_test$magnet_arm_x))/sd(my_test$magnet_arm_x)
my_test$magnet_arm_y <- (my_test$magnet_arm_y - mean(my_test$magnet_arm_y))/sd(my_test$magnet_arm_y)
my_test$magnet_belt_x <- (my_test$magnet_belt_x - mean(my_test$magnet_belt_x))/sd(my_test$magnet_belt_x)
my_test$magnet_belt_y <- (my_test$magnet_belt_y - mean(my_test$magnet_belt_y))/sd(my_test$magnet_belt_y)
my_test$magnet_belt_z <- (my_test$magnet_belt_z - mean(my_test$magnet_belt_z))/sd(my_test$magnet_belt_z)
my_test$magnet_dumbbell_x <- (my_test$magnet_dumbbell_x - mean(my_test$magnet_dumbbell_x))/sd(my_test$magnet_dumbbell_x)
my_test$magnet_dumbbell_y <- (my_test$magnet_dumbbell_y - mean(my_test$magnet_dumbbell_y))/sd(my_test$magnet_dumbbell_y)
my_test$magnet_dumbbell_z <- (my_test$magnet_dumbbell_z - mean(my_test$magnet_dumbbell_z))/sd(my_test$magnet_dumbbell_z)
my_test$pitch_belt <- (my_test$pitch_belt - mean(my_test$pitch_belt))/sd(my_test$pitch_belt)
my_test$roll_belt <- (my_test$roll_belt - mean(my_test$roll_belt))/sd(my_test$roll_belt)
my_test$total_accel_belt <- (my_test$total_accel_belt - mean(my_test$total_accel_belt))/sd(my_test$total_accel_belt)
my_test$total_accel_dumbbell <- (my_test$total_accel_dumbbell - mean(my_test$total_accel_dumbbell))/sd(my_test$total_accel_dumbbell)
my_test$yaw_belt <- (my_test$yaw_belt - mean(my_test$yaw_belt))/sd(my_test$yaw_belt)
my_test$yaw_dumbbell <- (my_test$yaw_dumbbell - mean(my_test$yaw_dumbbell))/sd(my_test$yaw_dumbbell)
ctrl = trainControl(method = "oob", number = 4)
modFit <- train(classe~.,data=myt_n,method="rf",prox=TRUE,trControl = ctrl,allowParallel=TRUE)
inTrain <- createDataPartition(y=mytraining_new2$classe,p=0.4,list=FALSE)
inTrain <- createDataPartition(y=mytraining_new2$classe,p=0.5,list=FALSE)
inTrain <- createDataPartition(y=mytraining_new2$classe,p=0.6,list=FALSE)
inTrain <- createDataPartition(y=mytraining_new2$classe,p=0.5,list=FALSE)
inTrain <- createDataPartition(y=mytraining_new2$classe,p=0.4,list=FALSE)
inTrain <- createDataPartition(y=mytraining_new2$classe,p=0.5,list=FALSE)
myt_n <- mytraining_new2[inTrain,]
ctrl = trainControl(method = "oob", number = 4)
modFit <- train(classe~.,data=myt_n,method="rf",prox=TRUE,trControl = ctrl,allowParallel=TRUE)
predict(modFit,my_test)
library(devtools)
install_github('slidify','ramnathv')
install_github('slidifyLibraries','ramnathv')
setwd("C:/Users/Umair/Desktop/DataProject2/myproject")
slidify("index.Rmd")
library("slidify")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
getwd()
library(slidify)
slidify("index.Rmd")
author("umair")
setwd("C:/Users/Umair/Desktop/DataProject2/myproject/umair")
slidify("index.Rmd")
slidify("index.Rmd")
publish_github(user="Umaer",repo="testDeck")
slidify("index.Rmd")
swtwd("C:/Users/Umair/Desktop/testDeck")
setwd("C:/Users/Umair/Desktop/testDeck")
slidify("index.Rmd")
swtwd("C:/Users/Umair/Desktop/DataProject1")
setwd("C:/Users/Umair/Desktop/DataProject1")
library(slidify)
library(shiny)
runApp()
runApp()
library(shiny)
runApp()
library(shinyapps)
deployApp()
